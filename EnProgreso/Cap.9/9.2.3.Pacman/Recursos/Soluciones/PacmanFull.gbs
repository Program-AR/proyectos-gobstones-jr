/*
   PROYECTO: Pacman
   AUTOR: Pablo E. -Fidel- Martínez López
   E-MAIL: fidel@unq.edu.ar
   ENLACE: 
   FECHA: marzo 2017
   VERSIÓN: 1.0
   LICENCIA: GPL.v2.0
*/

interactive program {
  K_ARROW_LEFT  -> { HacerJugadaDelPacman(Oeste)       }
  K_ARROW_RIGHT -> { HacerJugadaDelPacman(Este)        }
  K_ARROW_UP    -> { HacerJugadaDelPacman(Norte)       }
  K_ARROW_DOWN  -> { HacerJugadaDelPacman(Sur)         }
  TIMEOUT(1000) -> { 
                     HacerJugadaDelPacman(direcciónEnQueMiraElPersonaje(pacman()))
                     HacerJugadaDelFantasmaMasCopada() 
                   }
}

function pacman()   { return(Negro) }
function pared()    { return(Azul)  }
function pastilla() { return(Verde) }
function fantasma() { return(Rojo)  }

function hay(personaje) { return(hayBolitas(personaje)) }
function hayEnCuadrante(personaje, d1, d2) {
  Buscar_EnCuadrante__(personaje, d1, d2)
  return (hay(personaje))
}

procedure HacerJugadaDelPacman(dir) {
  MoverPersonaje(pacman(), dir)
  if (hay(fantasma())) { BOOM("Game over") }
  if (hay(pastilla())) 
    { Sacar(pastilla()) 
      if (not hayMasPastillas()) { BOOM("Ganaste!!") }
    }
  HacerJugadaDelFantasmaComún()
}

procedure MoverPersonaje(personaje, dir) {
  SacarPersonaje(personaje)
  MoverSiPuede_(dir)
  if (hay(pared())) { Mover(opuesto_(dir)) }
  PonerPersonajeMirandoAl(personaje, dir)
}

procedure SacarPersonaje(personaje) { SacarTodas_(personaje) }

procedure PonerPersonajeMirandoAl(color, dir) {
  if (dir == Norte) { Poner__Veces(color, 1) }
  if (dir == Este)  { Poner__Veces(color, 2) }
  if (dir == Sur)   { Poner__Veces(color, 3) }
  if (dir == Oeste) { Poner__Veces(color, 4) }
}

function direcciónEnQueMiraElPersonaje(color) {
  if (nroBolitas(color) == 1) { valorARetornar := Norte }
  if (nroBolitas(color) == 2) { valorARetornar := Este  }
  if (nroBolitas(color) == 3) { valorARetornar := Sur   }
  if (nroBolitas(color) == 4) { valorARetornar := Oeste }
  if (nroBolitas(color) == 0 || nroBolitas(color) > 4) { BOOM("No está el personaje en esta celda") }
  return (valorARetornar)
}

procedure HacerJugadaDelFantasmaComún() {
  BuscarPersonaje_(fantasma())
  estaAlSE := hayEnCuadrante(pacman(), Este,  Sur) 
  estaAlSO := hayEnCuadrante(pacman(), Oeste, Sur)
  estaAlNE := hayEnCuadrante(pacman(), Este,  Norte)
  estaAlNO := hayEnCuadrante(pacman(), Oeste, Norte)
  
  if (estaAlSE) 
            { MoverFantasma(Este, Sur) } 
  else { if (estaAlSO) 
            { MoverFantasma(Oeste, Sur) } 
  else { if (estaAlNO) 
            { MoverFantasma(Oeste, Norte) } 
  else      { MoverFantasma(Este, Norte) }
  }}
  BuscarPersonaje_(pacman())
}

procedure HacerJugadaDelFantasmaMasCopada() {
  BuscarPersonaje_(fantasma())
  estaAlSE := hayEnCuadrante(pacman(), Este,  Sur) 
  estaAlSO := hayEnCuadrante(pacman(), Oeste, Sur)
  estaAlNE := hayEnCuadrante(pacman(), Este,  Norte)
  estaAlNO := hayEnCuadrante(pacman(), Oeste, Norte)
  
  if        (estaAlSE && estaAlSO) 
            { MoverFantasma(Sur, Este) } 
  else { if (estaAlNE && estaAlNO) 
            { MoverFantasma(Norte, Oeste) } 
  else { if (estaAlSE) 
            { MoverFantasma(Este, Sur) } 
  else { if (estaAlSO) 
            { MoverFantasma(Oeste, Sur) } 
  else { if (estaAlNO) 
            { MoverFantasma(Oeste, Norte) } 
  else      { MoverFantasma(Este, Norte) }
  }}}}
  BuscarPersonaje_(pacman())
}

procedure MoverFantasma(d1, d2) {
  if (puedeMover(d1)) 
       { Mover(d1)
         if (hayPersonaje(pared())) { dirDefinitiva := d2 }
         else                       { dirDefinitiva := d1 }
         Mover(opuesto_(d1))
       } 
  else { dirDefinitiva := d2 }
  
  MoverPersonaje(fantasma(), dirDefinitiva)
  if (hayPersonaje(pacman())) { BOOM("Game Over") }
}

function hayMasPastillas() {
    totalPastillas := 0
    IrAlBorde(Sur) IrAlBorde(Oeste)
    ancho := distanciaAlBorde_(Este)
    while (hayCeldaSiguiente__(Este, Norte)) {
        if (hayPersonaje(pastilla())) 
          { totalPastillas := totalPastillas + 1 }
        IrACeldaSiguiente___(Este, Norte, ancho)
    }
    if (hayPersonaje(pastilla())) 
      { totalPastillas := totalPastillas + 1 }
    return (totalPastillas > 0)
}






