procedure BuscarPersonaje_(personaje) {
  IrAlBorde(Oeste); IrAlBorde(Norte)
  BuscarEnCuadrante(personaje, Este, Sur)
}

procedure Buscar_EnCuadrante__(personaje, d1, d2) {
  anchoDelCuadrante := distanciaAlBorde_(d1) 
  while (hayCeldaSiguiente__(d1,d2) && not hayBolitas(personaje))
     { IrACeldaSiguiente___(d1,d2,anchoDelCuadrante) }
}

function hayCeldaSiguiente__(d1,d2) {
    return (puedeMover(d1) || puedeMover(d2))
}

procedure IrACeldaSiguiente___(d1,d2,ancho) {
    if (puedeMover(d1)) 
          { Mover(d1) }
     else { Mover(d2)  Mover__Veces(opuesto(d1), ancho) } 
}

function distanciaAlBorde_(d) {
  pasosAlBorde := 0
  while (puedeMover(d)) {
      pasosAlBorde := pasosAlBorde + 1
      Mover(d)
  }
  return (pasosAlBorde)
}

procedure MoverSiPuede_(d)   { if (puedeMover(d)) { Mover(d) } }
procedure SacarTodas_(color) { Sacar__Veces(color, nroBolitas(color)) }

procedure Poner__Veces(color, n) { repeat(n) { Poner(color) } }
procedure Sacar__Veces(color, n) { repeat(n) { Sacar(color) } }
procedure Mover__Veces(dir, n)   { repeat(n) { Mover(dir) } }

function opuesto_(dir) {
    if (dir == Norte) { ret := Sur   }
    if (dir == Este)  { ret := Oeste }
    if (dir == Sur)   { ret := Norte }
    if (dir == Oeste) { ret := Este  }
    return (ret)    
}